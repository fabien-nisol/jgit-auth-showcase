/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.sg.jgit.showcase;

import org.eclipse.jgit.api.CloneCommand;
import org.eclipse.jgit.api.Git;
import org.eclipse.jgit.api.errors.GitAPIException;
import org.eclipse.jgit.transport.UsernamePasswordCredentialsProvider;
import picocli.CommandLine;

import java.io.File;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.concurrent.Callable;

public class App implements Callable<Integer> {
    @CommandLine.Option(names = {"-u", "--username"}, paramLabel = "username", description = "User")
    String username;

    @CommandLine.Option(names = {"-p", "--password"}, arity = "0..1", paramLabel = "password", description = "Password", interactive = true)
    char[] password;

    @CommandLine.Option(names = {"-t", "--personal-access-token"},  arity = "0..1", paramLabel = "token", description = "Personal access token", interactive = true)
    String token;

    @CommandLine.Parameters(index = "0", paramLabel = "project_url", description = "gitlab or github project url")
    String uri;

    @CommandLine.Parameters(index = "1", paramLabel = "destination", description = "target directory, must not exist")
    String targetDirectory;

    public static void main(String[] args) {
        System.exit(new CommandLine(new App()).execute(args));

    }

    public Integer call() throws URISyntaxException, GitAPIException {
        try {
            CloneCommand cloneCmd = Git.cloneRepository();

            if (username != null) {
                if (password != null) {
                    cloneCmd.setURI(uri);
                    cloneCmd.setCredentialsProvider(new UsernamePasswordCredentialsProvider(username, password));
                } else if (token != null) {
                    URI uri = URI.create(this.uri);
                    URI targetUri = new URI(
                            uri.getScheme(),
                            username + ":" + token,
                            uri.getHost(),
                            uri.getPort(),
                            uri.getPath(),
                            uri.getQuery(),
                            uri.getFragment());
                    cloneCmd.setURI(targetUri.toString());
                    cloneCmd.setCredentialsProvider(new UsernamePasswordCredentialsProvider(username, token));
                }
            } else {
                cloneCmd.setURI(uri);
            }
            cloneCmd.setDirectory(new File(targetDirectory));
            cloneCmd.call();
        } catch (Exception e) {
            e.printStackTrace(System.err);
            return 1;
        }
        return 0;
    }
}
